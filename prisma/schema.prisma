generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Plot {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code        String     @unique // "A", "B", "C"
  name        String     // "Garden Plot A", etc.
  area        Decimal?   @db.Decimal // plot area in rai/acres
  soilType    String?    @map("soil_type")
  description String?
  createdAt   DateTime?  @default(now()) @map("created_at") @db.Timestamp(6)
  trees       Tree[]
  batchLogs   BatchLog[]

  @@map("plots")
}

model Tree {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plotId        String    @map("plot_id") @db.Uuid
  treeNumber    Int       @map("tree_number") // 1, 2, 3... within the plot
  treeCode      String    @unique @map("tree_code") // Computed: "A1", "B3", etc.
  variety       String?
  plantedDate   DateTime? @map("planted_date") @db.Date
  status        String?   @default("alive")
  createdAt     DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  treeHeight    Decimal?  @map("tree_height") @db.Decimal
  trunkDiameter Decimal?  @map("trunk_diameter") @db.Decimal
  flowerDate    DateTime? @map("flower_date") @db.Date
  fruitCount    Int?      @default(0) @map("fruit_count")
  deathDate     DateTime? @map("death_date") @db.Date
  
  // Relationships
  plot          Plot      @relation(fields: [plotId], references: [id], onDelete: Cascade)
  logs          TreeLog[]

  // Constraints
  @@unique([plotId, treeNumber]) // Ensure unique tree numbers per plot
  @@map("trees")
}

model TreeLog {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  treeId         String?   @map("tree_id") @db.Uuid
  logDate        DateTime  @map("log_date") @db.Date
  notes          String?
  fertilizer     String?
  pesticide      String?
  createdBy      String?   @map("created_by")
  imagePath      String?   @map("image_path")
  createdAt      DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  activityType   String?   @map("activity_type")
  healthStatus   String?   @map("health_status")
  fertilizerType String?   @map("fertilizer_type")
  batchId        String?   @map("batch_id") @db.Uuid
  tree           Tree?     @relation(fields: [treeId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("tree_logs")
}

model BatchLog {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plotId     String    @map("plot_id") @db.Uuid
  logDate    DateTime  @map("log_date") @db.Date
  activityId String?   @map("activity_id") @db.Uuid
  notes      String?
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamptz(6)
  
  // Relationships
  plot       Plot      @relation(fields: [plotId], references: [id], onDelete: Cascade)
  activities Activity? @relation(fields: [activityId], references: [id], onUpdate: NoAction)

  @@map("batch_logs")
}

model TreeCost {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  costDate     DateTime @map("cost_date") @db.Date
  activityType String   @map("activity_type")
  target       String
  amount       Decimal  @db.Decimal
  notes        String?

  @@map("tree_costs")
}

model Variety {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String    @unique
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)

  @@map("varieties")
}

model Fertilizer {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String    @unique
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)

  @@map("fertilizers")
}

model Pesticide {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String    @unique
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)

  @@map("pesticides")
}

model PlantDisease {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String    @unique
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)

  @@map("plant_diseases")
}

model Activity {
  id         String     @id(map: "activities_cost_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String     @unique(map: "activities_cost_name_key")
  batch_logs BatchLog[]

  @@map("activities")
}

model ActivityCost {
  id   String @id(map: "activities_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique(map: "activities_name_key")

  @@map("activities_cost")
}

model users {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique
}
