'use client'

import { useEffect, useState } from "react";
import { supabase } from "@/lib/supabase";
import Link from "next/link";

interface Tree {
  id: string
  location_id: string
  variety: string
  planted_date: string
  status: string
  tree_number: number
}

interface TreeLog {
  id: string
  tree_id: string
  log_date: string
  activity_type: string
  notes: string
}

export default function TempAccessPage() {
  const [trees, setTrees] = useState<Tree[]>([])
  const [treeLogs, setTreeLogs] = useState<TreeLog[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    fetchData()
  }, [])

  async function fetchData() {
    try {
      // Fetch trees
      const { data: treesData, error: treesError } = await supabase
        .from('trees')
        .select('*')
        .order('created_at', { ascending: false })
        .limit(10)

      if (treesError) {
        console.error('Trees error:', treesError)
      } else {
        setTrees(treesData || [])
      }

      // Fetch tree logs
      const { data: logsData, error: logsError } = await supabase
        .from('tree_logs')
        .select('*')
        .order('created_at', { ascending: false })
        .limit(10)

      if (logsError) {
        console.error('Logs error:', logsError)
      } else {
        setTreeLogs(logsData || [])
      }

    } catch (error) {
      console.error('Fetch error:', error)
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4"></div>
          <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
        </div>
      </div>
    )
  }

  return (
    <div className="max-w-6xl mx-auto p-6">
      <div className="mb-6">
        <h1 className="text-3xl font-bold mb-4">üåø ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ß‡∏ô‡∏ß‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå‡∏®‡∏¥‡∏£‡∏¥</h1>
        <p className="text-gray-600 mb-4">
          ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß - ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {trees.length} ‡∏ï‡πâ‡∏ô
        </p>
        
        <div className="flex gap-4 mb-6">
          <Link href="/auth" className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">
            üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
          </Link>
          <button 
            onClick={() => window.location.href = '/admin'}
            className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
          >
            ‚öôÔ∏è ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Admin (‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô)
          </button>
        </div>
      </div>

      <div className="grid gap-6 md:grid-cols-2">
        {/* Trees */}
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-bold mb-4">üå≥ ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ (‡πÅ‡∏™‡∏î‡∏á 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)</h2>
          <div className="space-y-3">
            {trees.map((tree) => (
              <div key={tree.id} className="border-l-4 border-green-500 pl-4 py-2">
                <div className="font-semibold">
                  {tree.variety} - ‡πÅ‡∏õ‡∏•‡∏á {tree.location_id} ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç {tree.tree_number}
                </div>
                <div className="text-sm text-gray-600">
                  ‡∏õ‡∏•‡∏π‡∏Å: {tree.planted_date} | ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {tree.status}
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Tree Logs */}
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-bold mb-4">üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</h2>
          <div className="space-y-3">
            {treeLogs.map((log) => (
              <div key={log.id} className="border-l-4 border-blue-500 pl-4 py-2">
                <div className="font-semibold">{log.activity_type}</div>
                <div className="text-sm text-gray-600">
                  ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {log.log_date}
                </div>
                {log.notes && (
                  <div className="text-sm text-gray-500">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: {log.notes}</div>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="mt-8 p-4 bg-yellow-50 border border-yellow-200 rounded">
        <h3 className="font-bold mb-2">üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</h3>
        <p>‚Ä¢ ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ: 61 ‡∏ï‡πâ‡∏ô</p>
        <p>‚Ä¢ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
        <p>‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏õ‡∏•‡∏á: 3 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
        <p>‚Ä¢ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢: 3 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
        <p>‚Ä¢ ‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏ó‡∏∏‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: 7 ‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå</p>
        <p>‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏∏‡πã‡∏¢: 4 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</p>
      </div>
    </div>
  )
}